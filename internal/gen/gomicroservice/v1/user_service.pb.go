// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: gomicroservice/v1/user_service.proto

package gomicroservicev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A user resource.
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resource name of the user.
	// Format: users/{user_id}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The display name of the user.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The email address of the user.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// The creation time of the user.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update time of the user.
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_gomicroservice_v1_user_service_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *User) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// Request message for CreateUser method.
type CreateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user to create.
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// Optional user id. Will be generated by system if not provided.
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_gomicroservice_v1_user_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Request message for GetUser method.
type GetUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resource name of the user to retrieve.
	// Format: users/{user_id}
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_gomicroservice_v1_user_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request message for ListUsers method.
type ListUsersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The maximum number of users to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// A string value to restrict results based on a specific field.
	// For example: "display_name=John" or "email=john@example.com"
	Filter        string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_gomicroservice_v1_user_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListUsersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUsersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListUsersRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// Response message for ListUsers method.
type ListUsersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of users.
	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// A token to retrieve the next page of results, or empty if there are no more results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_gomicroservice_v1_user_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Request message for UpdateUser method.
type UpdateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user to update.
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// The list of fields to update.
	UpdateMask    *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_gomicroservice_v1_user_service_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UpdateUserRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// Request message for DeleteUser method.
type DeleteUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resource name of the user to delete.
	// Format: users/{user_id}
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gomicroservice_v1_user_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_gomicroservice_v1_user_service_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_gomicroservice_v1_user_service_proto protoreflect.FileDescriptor

const file_gomicroservice_v1_user_service_proto_rawDesc = "" +
	"\n" +
	"$gomicroservice/v1/user_service.proto\x12\x11gomicroservice.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/api/client.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x19google/api/resource.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa9\x02\n" +
	"\x04User\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tB\x03\xe0A\bR\x04name\x12-\n" +
	"\fdisplay_name\x18\x02 \x01(\tB\n" +
	"\xe0A\x02\xbaH\x04r\x02\x10\x02R\vdisplayName\x12 \n" +
	"\x05email\x18\x03 \x01(\tB\n" +
	"\xe0A\x02\xbaH\x04r\x02`\x01R\x05email\x12@\n" +
	"\vcreate_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"createTime\x12@\n" +
	"\vupdate_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\n" +
	"updateTime:3\xeaA0\n" +
	"\x13gomicroservice/User\x12\fusers/{user}*\x05users2\x04user\"\x92\x01\n" +
	"\x11CreateUserRequest\x120\n" +
	"\x04user\x18\x01 \x01(\v2\x17.gomicroservice.v1.UserB\x03\xe0A\x02R\x04user\x12K\n" +
	"\auser_id\x18\x02 \x01(\tB2\xe0A\x01\xbaH,\xd8\x01\x01r'\x10\x01\x18?2!^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$R\x06userId\"A\n" +
	"\x0eGetUserRequest\x12/\n" +
	"\x04name\x18\x01 \x01(\tB\x1b\xe0A\x02\xfaA\x15\n" +
	"\x13gomicroservice/UserR\x04name\"u\n" +
	"\x10ListUsersRequest\x12 \n" +
	"\tpage_size\x18\x01 \x01(\x05B\x03\xe0A\x01R\bpageSize\x12\"\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tB\x03\xe0A\x01R\tpageToken\x12\x1b\n" +
	"\x06filter\x18\x03 \x01(\tB\x03\xe0A\x01R\x06filter\"j\n" +
	"\x11ListUsersResponse\x12-\n" +
	"\x05users\x18\x01 \x03(\v2\x17.gomicroservice.v1.UserR\x05users\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\x87\x01\n" +
	"\x11UpdateUserRequest\x120\n" +
	"\x04user\x18\x01 \x01(\v2\x17.gomicroservice.v1.UserB\x03\xe0A\x01R\x04user\x12@\n" +
	"\vupdate_mask\x18\x02 \x01(\v2\x1a.google.protobuf.FieldMaskB\x03\xe0A\x01R\n" +
	"updateMask\"D\n" +
	"\x11DeleteUserRequest\x12/\n" +
	"\x04name\x18\x01 \x01(\tB\x1b\xe0A\x02\xfaA\x15\n" +
	"\x13gomicroservice/UserR\x04name2\xce\x04\n" +
	"\vUserService\x12s\n" +
	"\n" +
	"CreateUser\x12$.gomicroservice.v1.CreateUserRequest\x1a\x17.gomicroservice.v1.User\"&\xdaA\fuser,user_id\x82\xd3\xe4\x93\x02\x11:\x04user\"\t/v1/users\x12h\n" +
	"\aGetUser\x12!.gomicroservice.v1.GetUserRequest\x1a\x17.gomicroservice.v1.User\"!\xdaA\x04name\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/{name=users/*}\x12i\n" +
	"\tListUsers\x12#.gomicroservice.v1.ListUsersRequest\x1a$.gomicroservice.v1.ListUsersResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/users\x12\x85\x01\n" +
	"\n" +
	"UpdateUser\x12$.gomicroservice.v1.UpdateUserRequest\x1a\x17.gomicroservice.v1.User\"8\xdaA\x10user,update_mask\x82\xd3\xe4\x93\x02\x1f:\x04user2\x17/v1/{user.name=users/*}\x12m\n" +
	"\n" +
	"DeleteUser\x12$.gomicroservice.v1.DeleteUserRequest\x1a\x16.google.protobuf.Empty\"!\xdaA\x04name\x82\xd3\xe4\x93\x02\x14*\x12/v1/{name=users/*}B\xe3\x01\n" +
	"\x15com.gomicroservice.v1B\x10UserServiceProtoP\x01ZSgithub.com/fredrikaverpil/go-microservice/gen/go/gomicroservice/v1;gomicroservicev1\xa2\x02\x03GXX\xaa\x02\x11Gomicroservice.V1\xca\x02\x11Gomicroservice\\V1\xe2\x02\x1dGomicroservice\\V1\\GPBMetadata\xea\x02\x12Gomicroservice::V1b\x06proto3"

var (
	file_gomicroservice_v1_user_service_proto_rawDescOnce sync.Once
	file_gomicroservice_v1_user_service_proto_rawDescData []byte
)

func file_gomicroservice_v1_user_service_proto_rawDescGZIP() []byte {
	file_gomicroservice_v1_user_service_proto_rawDescOnce.Do(func() {
		file_gomicroservice_v1_user_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gomicroservice_v1_user_service_proto_rawDesc), len(file_gomicroservice_v1_user_service_proto_rawDesc)))
	})
	return file_gomicroservice_v1_user_service_proto_rawDescData
}

var file_gomicroservice_v1_user_service_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_gomicroservice_v1_user_service_proto_goTypes = []any{
	(*User)(nil),                  // 0: gomicroservice.v1.User
	(*CreateUserRequest)(nil),     // 1: gomicroservice.v1.CreateUserRequest
	(*GetUserRequest)(nil),        // 2: gomicroservice.v1.GetUserRequest
	(*ListUsersRequest)(nil),      // 3: gomicroservice.v1.ListUsersRequest
	(*ListUsersResponse)(nil),     // 4: gomicroservice.v1.ListUsersResponse
	(*UpdateUserRequest)(nil),     // 5: gomicroservice.v1.UpdateUserRequest
	(*DeleteUserRequest)(nil),     // 6: gomicroservice.v1.DeleteUserRequest
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil), // 8: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),         // 9: google.protobuf.Empty
}
var file_gomicroservice_v1_user_service_proto_depIdxs = []int32{
	7,  // 0: gomicroservice.v1.User.create_time:type_name -> google.protobuf.Timestamp
	7,  // 1: gomicroservice.v1.User.update_time:type_name -> google.protobuf.Timestamp
	0,  // 2: gomicroservice.v1.CreateUserRequest.user:type_name -> gomicroservice.v1.User
	0,  // 3: gomicroservice.v1.ListUsersResponse.users:type_name -> gomicroservice.v1.User
	0,  // 4: gomicroservice.v1.UpdateUserRequest.user:type_name -> gomicroservice.v1.User
	8,  // 5: gomicroservice.v1.UpdateUserRequest.update_mask:type_name -> google.protobuf.FieldMask
	1,  // 6: gomicroservice.v1.UserService.CreateUser:input_type -> gomicroservice.v1.CreateUserRequest
	2,  // 7: gomicroservice.v1.UserService.GetUser:input_type -> gomicroservice.v1.GetUserRequest
	3,  // 8: gomicroservice.v1.UserService.ListUsers:input_type -> gomicroservice.v1.ListUsersRequest
	5,  // 9: gomicroservice.v1.UserService.UpdateUser:input_type -> gomicroservice.v1.UpdateUserRequest
	6,  // 10: gomicroservice.v1.UserService.DeleteUser:input_type -> gomicroservice.v1.DeleteUserRequest
	0,  // 11: gomicroservice.v1.UserService.CreateUser:output_type -> gomicroservice.v1.User
	0,  // 12: gomicroservice.v1.UserService.GetUser:output_type -> gomicroservice.v1.User
	4,  // 13: gomicroservice.v1.UserService.ListUsers:output_type -> gomicroservice.v1.ListUsersResponse
	0,  // 14: gomicroservice.v1.UserService.UpdateUser:output_type -> gomicroservice.v1.User
	9,  // 15: gomicroservice.v1.UserService.DeleteUser:output_type -> google.protobuf.Empty
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_gomicroservice_v1_user_service_proto_init() }
func file_gomicroservice_v1_user_service_proto_init() {
	if File_gomicroservice_v1_user_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gomicroservice_v1_user_service_proto_rawDesc), len(file_gomicroservice_v1_user_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gomicroservice_v1_user_service_proto_goTypes,
		DependencyIndexes: file_gomicroservice_v1_user_service_proto_depIdxs,
		MessageInfos:      file_gomicroservice_v1_user_service_proto_msgTypes,
	}.Build()
	File_gomicroservice_v1_user_service_proto = out.File
	file_gomicroservice_v1_user_service_proto_goTypes = nil
	file_gomicroservice_v1_user_service_proto_depIdxs = nil
}
