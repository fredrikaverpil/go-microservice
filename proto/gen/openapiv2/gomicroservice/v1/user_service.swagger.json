{
  "swagger": "2.0",
  "info": {
    "title": "gomicroservice/v1/user_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/users": {
      "get": {
        "summary": "Lists users.",
        "description": "This follows the AIP-132 standard for List methods.",
        "operationId": "UserService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of users to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "The next_page_token value returned from a previous List request, if any.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "A string value to restrict results based on a specific field.\nFor example:\ndisplay_name=John\nemail=johnexample.com",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "summary": "Creates a new user.",
        "description": "This follows the AIP-133 standard for Create methods.",
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "The user to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User",
              "required": [
                "user"
              ]
            }
          },
          {
            "name": "userId",
            "description": "Optional user id. Will be generated by system if not provided.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/{name}": {
      "get": {
        "summary": "Gets a user.",
        "description": "This follows the AIP-131 standard for Get methods.",
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The resource name of the user to retrieve.\nFormat: users/{user_id}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "Deletes a user.",
        "description": "This follows the AIP-135 standard for Delete methods.",
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The resource name of the user to delete.\nFormat: users/{user_id}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/{user.name}": {
      "patch": {
        "summary": "Updates a user.",
        "description": "This follows the AIP-134 standard for Update methods.",
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.name",
            "description": "The resource name of the user.\nFormat: users/{user_id}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          },
          {
            "name": "user",
            "description": "The user to update.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string",
                  "description": "The display name of the user."
                },
                "email": {
                  "type": "string",
                  "description": "The email address of the user."
                },
                "createTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The creation time of the user.",
                  "readOnly": true
                },
                "updateTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The last update time of the user.",
                  "readOnly": true
                }
              },
              "title": "The user to update.",
              "required": [
                "displayName",
                "email"
              ]
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "description": "The list of users."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results, or empty if there are no more results."
        }
      },
      "description": "Response message for ListUsers method."
    },
    "v1User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The resource name of the user.\nFormat: users/{user_id}"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the user."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user."
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the user.",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "description": "The last update time of the user.",
          "readOnly": true
        }
      },
      "description": "A user resource.",
      "required": [
        "displayName",
        "email"
      ]
    }
  }
}
